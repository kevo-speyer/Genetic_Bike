Bike	bike.py	/^class Bike(object):$/
Floor	floor.py	/^class Floor(object):$/
Mmain.py	main.py	/^def main():$/
Mmain_bike.py	main_bike.py	/^def main():$/
Render	animation.py	/^class Render(object):$/
RuKu4	solver.py	/^def RuKu4(bike1,ground):$/
__init__	animation.py	/^    def __init__(self, ground):$/
__init__	bike.py	/^    def __init__(self):$/
__init__	floor.py	/^    def __init__(self):$/
animate	animation.py	/^    def animate(self, dx):$/
bk_gd_int	bike_gr_int.py	/^def bk_gd_int(bike,ground):$/
close	animation.py	/^    def close(self):$/
crossover	evol.py	/^def crossover(bike1,bike2):$/
dist_point_line	bike_gr_int.py	/^def dist_point_line(nx,ny,px,py,xg,yg,xw,yw):$/
force	model.py	/^def force(bike):$/
gen_coor	floor.py	/^    def gen_coor(self): #This generates the coordi/
gen_rand_bike	bike.py	/^    def gen_rand_bike(self):$/
gen_sp_bike	bike.py	/^    def gen_sp_bike(self,bike_pos,bike_mass,k_sp):/
gen_versors	floor.py	/^    def gen_versors(self): #This generates the loc/
grav_force	grav_force.py	/^def grav_force(bike):$/
init_line	animation.py	/^    def init_line(self):$/
